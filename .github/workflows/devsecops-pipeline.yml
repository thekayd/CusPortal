name: DevSecOps Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test_pull_request:
    name: Test Pull Request
    runs-on: ubuntu-latest
    steps:
     - name: Checkout code
       uses: actions/checkout@v3
     - name: Setup Node.js
       uses: actions/setup-node@v3
       with:
         node-version: '14'
     - name: Install dependencies
       run: npm ci
       working-directory: main-app  # Set main-app as the working directory
     - name: Run tests
       run: npm test
       working-directory: main-app  # Run tests from main-app
     - name: Build application
       run: npm run build
       working-directory: main-app  # Build from main-app

  security_checks:
    name: Security Checks
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    - name: Install dependencies
      run: npm ci
      working-directory: main-app  # Set working directory
    - name: Run npm audit
      run: npm audit --audit-level=moderate
      working-directory: main-app  # Set working directory
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  code_quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    - name: Install dependencies
      run: npm ci
      working-directory: main-app  # Set working directory
    - name: Run ESLint
      run: npx eslint .
      working-directory: main-app  # Set working directory
    - name: Run Prettier
      run: npx prettier --check .
      working-directory: main-app  # Set working directory

  security_scanning:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Run OWASP ZAP Scan
      uses: zaproxy/action-full-scan@v0.7.0
      with:
        target: 'https://localhost:3001'  # Ensure your app is running for the scan

  database_test:
    name: Database Connection Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    - name: Install dependencies
      run: npm ci
      working-directory: main-app  # Set working directory
    - name: Run database connection test
      run: npm test src/tests/database.test.js
      working-directory: main-app  # Set working directory
      env:
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
